#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// Получаем элемент справочника PAPI_Алгоритмы по ИмяАлгоритма
// Параметры:
//  ИмяАлгоритма - Строка - Имя алгоритма
// Возвращаемое значение:
//	Алгоритм - СправочникСсылка.PAPI_Алгоритмы - найденный алгоритм	
Функция ПолучитьАлгоритмПоИмени(ИмяАлгоритма) Экспорт 
	
	Возврат Справочники.PAPI_Алгоритмы.НайтиПоРеквизиту("ИмяАлгоритма", ИмяАлгоритма);
	
КонецФункции	

// Структура Настроек 
// Возвращаемое значение:
//	СтруктураДанных - Структура - каркас структуры для дальнейшего заполнения	
Функция ПолучитьЭталоннуюСтруктуру() Экспорт 
	
	СтруктураДанных = Новый Структура;
// Структура Алгоритма ++	
	СтруктураАлгоритма = Новый Структура;
	СтруктураАлгоритма.Вставить("КодАлгоритма", "");
	
	ПараметрыАлгоритма = Новый ТаблицаЗначений;
	ПараметрыАлгоритма.Колонки.Добавить("Имя");
	ПараметрыАлгоритма.Колонки.Добавить("Значение");
	ПараметрыАлгоритма.Колонки.Добавить("Вычисляемый");
	ПараметрыАлгоритма.Колонки.Добавить("ПроизвольныйКод"); 
	
	СтруктураАлгоритма.Вставить("ПараметрыАлгоритма", 	ПараметрыАлгоритма);
	
	СтруктураДанных.Вставить("СтруктураАлгоритма", 		СтруктураАлгоритма);
// Структура Алгоритма --	

	Возврат СтруктураДанных;	
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли