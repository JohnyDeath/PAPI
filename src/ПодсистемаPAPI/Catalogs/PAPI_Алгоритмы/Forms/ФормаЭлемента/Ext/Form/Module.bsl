#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда 
	// Создан копированием++
		Если ЗначениеЗаполнено(Параметры.ЗначениеКопирования)
			И ТипЗнч(Параметры.ЗначениеКопирования) = Тип("СправочникСсылка.PAPI_Алгоритмы") Тогда	
			
			ПриЧтенииНаСервере(Параметры.ЗначениеКопирования);
				
		КонецЕсли;
	// Создан копированием--	
	КонецЕсли;		

	СоздатьКонсольHTMLНаСервере(Отказ, СтандартнаяОбработка);
	КонсольПриСозданииНаСервере(Отказ, СтандартнаяОбработка);

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Не Объект.ЭтоГруппа Тогда
		ПоместитьСтруктураАлгоритмаВНастройки(ТекущийОбъект);
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	Если Не ТекущийОбъект.ЭтоГруппа Тогда

		СтруктураНастройки = PAPI_РаботаСАлгоритмами.СтруктураНастроекАлгоритма(ТекущийОбъект.Настройки);

		Если СтруктураНастройки.Свойство("СА_КодАлгоритма") Тогда
			КодАлгоритма = СтруктураНастройки.СА_КодАлгоритма;	
		КонецЕсли;	
		
		Если СтруктураНастройки.Свойство("СА_ПараметрыАлгоритма") Тогда
			ПараметрыАлгоритма.Загрузить(СтруктураНастройки.СА_ПараметрыАлгоритма);	
		КонецЕсли;	
	КонецЕсли;	
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	КонсольПриОткрытии(Отказ);
КонецПроцедуры

#КонецОбласти 


#Область ОбработчикиСобытийЭлементовТаблицыФормыПараметрыАлгоритма

&НаКлиенте
Процедура ПараметрыАлгоритмаПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.ПараметрыАлгоритма.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено
		И ТекущиеДанные.Вычисляемый Тогда 
		 
		ТекущийПроизвольныйКод = ТекущиеДанные.ПроизвольныйКод;
		
	Иначе
		
		ТекущийПроизвольныйКод = ""; 
		
	КонецЕсли;
	
	ОбновитьПользовательскиеОбъекты();
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущийПроизвольныйКодПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ПараметрыАлгоритма.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено 
		И ТекущиеДанные.Вычисляемый Тогда
		
		ТекущиеДанные.ПроизвольныйКод = ТекущийПроизвольныйКод;  
		
	Иначе   
		
		ТекущиеДанные.ПроизвольныйКод = "";
		
	КонецЕсли;                         

КонецПроцедуры

&НаКлиенте
Процедура ПараметрыАлгоритмаПроизвольныйКодПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ПараметрыАлгоритма.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено 
		И ТекущиеДанные.Вычисляемый Тогда
		
		ТекущийПроизвольныйКод = ТекущиеДанные.ПроизвольныйКод;  
		
	Иначе   
		
		ТекущийПроизвольныйКод = "";
		
	КонецЕсли

КонецПроцедуры


&НаКлиенте
Процедура ПараметрыАлгоритмаВычисляемыйПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ПараметрыАлгоритма.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено 
		И ТекущиеДанные.Вычисляемый Тогда
		
		ТекущийПроизвольныйКод = ТекущиеДанные.ПроизвольныйКод;  
		
	Иначе   
		
		ТекущийПроизвольныйКод = "";
		
	КонецЕсли; 
	
КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПоместитьСтруктураАлгоритмаВНастройки(ТекущийОбъект)
		
// СтруктураАлгоритма ++		                    
	СтруктураДанных = Новый Структура;
	СтруктураАлгоритма = Новый Структура;
	СтруктураАлгоритма.Вставить("КодАлгоритма",КодАлгоритма);
	
	СтруктураАлгоритма.Вставить("ПараметрыАлгоритма", ПараметрыАлгоритма.Выгрузить(,"Имя, Значение, Вычисляемый, ПроизвольныйКод"));
	
	СтруктураДанных.Вставить("СтруктураАлгоритма", СтруктураАлгоритма);
// СтруктураАлгоритма --

	ДанныеXML = PAPI_ОбщегоНазначенияВызовСервера.СериализаторXML(СтруктураДанных);
	ТекущийОбъект.Настройки = Новый ХранилищеЗначения(?(ДанныеXML.Отработал, ДанныеXML.Результат, ""));
	
КонецПроцедуры 

#КонецОбласти

#Область КонсольКода

&НаСервере
Процедура СоздатьКонсольHTMLНаСервере(Отказ, СтандартнаяОбработка)
	
	#Область Реквизит_КонсольHTML
	ОписаниеТиповСтрока = Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(0));
	
	МассивДобавить = Новый Массив;
	МассивДобавить.Добавить(Новый РеквизитФормы("КонсольHTML", ОписаниеТиповСтрока));
	
	ЭтотОбъект.ИзменитьРеквизиты(МассивДобавить);
	#КонецОбласти

	#Область Элемент_КонсольHTML
	ЭлементПанель = Элементы.Добавить("ПанельКодАлгоритма", Тип("ГруппаФормы"), Элементы.ГруппаКодАлгоритмОписание);
	ЭлементПанель.Вид = ВидГруппыФормы.Страницы;
	ЭлементПанель.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	
	ЭлементСтраница1 = Элементы.Добавить("СтраницаКодАлгоритма", Тип("ГруппаФормы"), ЭлементПанель);
	ЭлементСтраница1.Вид = ВидГруппыФормы.Страница;
	ЭлементСтраница1.Заголовок = НСтр("ru='Текст'");
	Элементы.Переместить(Элементы.КодАлгоритма, ЭлементСтраница1);
	
	ЭлементСтраница2 = Элементы.Добавить("СтраницаКонсольКода", Тип("ГруппаФормы"), ЭлементПанель);
	ЭлементСтраница2.Вид = ВидГруппыФормы.Страница;
	ЭлементСтраница2.Заголовок = НСтр("ru='Консоль'");
	
	ЭлементПанель = Элементы.Добавить("КоманднаяПанельКонсольHTML", Тип("ГруппаФормы"), ЭлементСтраница2);
	ЭлементПанель.Вид = ВидГруппыФормы.КоманднаяПанель;
	
	ЭлементКонсоль = Элементы.Добавить("КонсольHTML", Тип("ПолеФормы"), ЭлементСтраница2);
	ЭлементКонсоль.Вид = ВидПоляФормы.ПолеHTMLДокумента;
	ЭлементКонсоль.ПутьКДанным = "КонсольHTML";
	ЭлементКонсоль.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	ЭлементКонсоль.УстановитьДействие("ДокументСформирован", "КонсольHTMLДокументСформирован");
	ЭлементКонсоль.УстановитьДействие("ПриНажатии", "КонсольHTMLПриНажатии");
	#КонецОбласти
	
КонецПроцедуры

&НаКлиенте 
Асинх Процедура КонсольПриОткрытии(Отказ)
	Результат = Ждать PAPI_КонсольКодаКлиент.ПриОткрытииАсинх(ЭтотОбъект, Отказ);
	
	Если НЕ Результат.Выполнено Тогда
		Элементы.ПанельКодАлгоритма.ТекущаяСтраница = Элементы.СтраницаКодАлгоритма;
	Иначе 
		Элементы.ПанельКодАлгоритма.ТекущаяСтраница = Элементы.СтраницаКонсольКода;
		
		Ждать PAPI_КонсольКодаКлиент.ИнициализацияПоляАсинх(ЭтотОбъект, "КонсольHTML");
	КонецЕсли;
КонецПроцедуры

&НаСервере 
Процедура КонсольПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	PAPI_КонсольКода.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
	ПараметрыПанели = PAPI_КонсольКодаКлиентСервер.ПараметрыПанелиКонсоли();
	ПараметрыПанели.ИзменятьКомпиляцию = Ложь;
	
	PAPI_КонсольКода.ИнициализацияКоманднойПанели(ЭтотОбъект,
		"КонсольHTML",
		Элементы.КоманднаяПанельКонсольHTML,
		ПараметрыПанели);
	
КонецПроцедуры
	
&НаКлиенте
Процедура КомандаКонсолиКода(Команда)	
	PAPI_КонсольКодаКлиент.ВыполнитьКомандуКонсолиКода(ЭтотОбъект, Команда);	
КонецПроцедуры	
	
&НаКлиенте 
Процедура ПриИзмененииПоляКонсоли(знач Консоль) Экспорт	
	ЭтотОбъект.КодАлгоритма = PAPI_КонсольКодаКлиент.ПолучитьТекст(Консоль);	
КонецПроцедуры

&НаКлиенте 
Процедура ПослеИнициализациПоляКонсоли(знач ИмяРеквизита, знач ДопПараметры) Экспорт

	Если ИмяРеквизита <> "КонсольHTML" Тогда
		Возврат;
	КонецЕсли;
	
	Консоль = PAPI_КонсольКодаКлиент.ЭтаКонсоль(ЭтотОбъект, ИмяРеквизита);
	
	PAPI_КонсольКодаКлиент.УстановитьДирективуКомпиляции(Консоль, "НаСервере", Ложь); // ЭтотОбъект.ДирективаКомпиляции
	PAPI_КонсольКодаКлиент.ОбнулитьМетаданные(Консоль); // выполняется в методе УстановитьДирективуКомпиляции
	PAPI_КонсольКодаКлиент.РежимЗапроса(Консоль, Ложь); // ЭтотОбъект.РежимЗапроса
	PAPI_КонсольКодаКлиент.УстановитьТекст(Консоль, ЭтотОбъект.КодАлгоритма);
	PAPI_КонсольКодаКлиент.УстановитьОригинальныйТекст(Консоль, ЭтотОбъект.КодАлгоритма);
	PAPI_КонсольКодаКлиент.ОповещатьПриИзменении(Консоль, Истина);
	
	//БСПТ_КонсольКодаКлиент.ПодсвечиватьЗапросы(Консоль, ЭтотОбъект.РежимЗапроса);
	
	//БСПТ_КонсольКодаКлиент.ЗагрузитьПользовательскиеОбъекты(Консоль, ЭтотОбъект.Параметры.ПользовательскиеОбъекты);
		
	//БСПТ_КонсольКодаКлиент.ДоступностьСравнения(Консоль, Ложь);
	//БСПТ_КонсольКодаКлиент.БыстрыеПодсказки(Консоль, Ложь);
	//БСПТ_КонсольКодаКлиент.КартаКода(Консоль, Ложь);
	
	ОбновитьПользовательскиеОбъекты();
	
КонецПроцедуры

&НаКлиенте 
Процедура ОбновитьПользовательскиеОбъекты()
	
	Консоль = PAPI_КонсольКодаКлиент.ЭтаКонсоль(ЭтотОбъект, "КонсольHTML");
	
	Объекты = Новый Структура;
	Объекты.Вставить("Результат", Новый Структура);
	ВсеПользовательскиеПараметры = Новый Структура;
	Для Каждого ТекПараметр Из ПараметрыАлгоритма Цикл
		ВсеПользовательскиеПараметры.Вставить(ТекПараметр.Имя, Новый Структура("name", ТекПараметр.Имя));
	КонецЦикла;
	Объекты.Вставить("ПараметрыАлгоритма", Новый Структура("properties", ВсеПользовательскиеПараметры));
	
	PAPI_КонсольКодаКлиент.ЗагрузитьПользовательскиеОбъекты(Консоль, Объекты);
	
КонецПроцедуры
	
#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КонсольHTMLДокументСформирован(Элемент)	
	PAPI_КонсольКодаКлиент.КонсольДокументСформирован(ЭтотОбъект, "КонсольHTML", Элемент);	
КонецПроцедуры

&НаКлиенте
Процедура КонсольHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)	
	PAPI_КонсольКодаКлиент.КонсольПриНажатии(ЭтотОбъект, "КонсольHTML", Элемент, ДанныеСобытия, СтандартнаяОбработка);	
КонецПроцедуры

#КонецОбласти

#КонецОбласти