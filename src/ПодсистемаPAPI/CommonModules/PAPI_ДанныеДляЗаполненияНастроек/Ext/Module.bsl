#Область ПрограммныйИнтерфейс

// Функция возвращает основной язык конфигурации
// 
// Возвращаемое значение:
//  Метаданные.ОсновнойЯзык.КодЯзыка - код языка
//
Функция ОсновнойЯзыкКонфигурации() Экспорт 
	Возврат Метаданные.ОсновнойЯзык.КодЯзыка;
КонецФункции

// Функция возвращает кодировку UTF8
// 
// Возвращаемое значение:
//  КодировкаТекста.UTF8 - кодировка
//
Функция ОсновнаяКодировкаОтветов() Экспорт
	
	Возврат КодировкаТекста.UTF8;
	
КонецФункции	

// Процедура вставляет заголовок "Content-Type" в ответ
//
// Параметры:
//  Ответ	 - HTTPСервисОтвет - ответ http сервиса
//
Процедура ЗаполнитьСтандартныйЗаголовокОтвета(Ответ) Экспорт 
	
	Ответ.Заголовки.Вставить("Content-Type", "text/html; charset=utf-8");
	
КонецПроцедуры	

// Заполняем предопределенные ошибки в справочнике PAPI_ШаблоныСообщений
Процедура ЗаполнитьСправочникPAPI_ШаблоныСообщений() Экспорт
	
	ВключенПривилегированныйРежим = Ложь;
	Если Не ПривилегированныйРежим() Тогда  
		ВключенПривилегированныйРежим = Истина;
		УстановитьПривилегированныйРежим(ВключенПривилегированныйРежим);
	КонецЕсли;
	
	МассивДляЗаполнения = Новый Массив;
	
	Макет = Справочники.PAPI_ШаблоныСообщений.ПолучитьМакет("СтандартныеСообщения");
	НомерСтроки 	= 1;
	
	кКлючПоиска		= "C1";
	кСообщение 		= "C2";
	кКодСостояния 	= "C3";
		
	ЗаполненоСообщение = ЗначениеЗаполнено(Макет.Область("R" + Формат(НомерСтроки, "ЧН=0; ЧГ=0") + кКлючПоиска).Текст);
	Пока ЗаполненоСообщение Цикл
		ДобавитьВМассивДляЗаполненияЭлемент(МассивДляЗаполнения,
		Число(Макет.Область("R" + Формат(НомерСтроки, "ЧН=0; ЧГ=0") + кКодСостояния).Текст),
		Макет.Область("R" + Формат(НомерСтроки, "ЧН=0; ЧГ=0") + кКлючПоиска).Текст,
		Макет.Область("R" + Формат(НомерСтроки, "ЧН=0; ЧГ=0") + кСообщение).Текст);
		
		НомерСтроки = НомерСтроки + 1;	
		ЗаполненоСообщение = ЗначениеЗаполнено(Макет.Область("R" + Формат(НомерСтроки, "ЧН=0; ЧГ=0") + кКлючПоиска).Текст);
	КонецЦикла;	
	
// Создаем сообщения	
// Создаем элементы только если код элемента не занят
	
	Для Каждого ЭлМассива Из МассивДляЗаполнения Цикл 
		Если ПустаяСтрока(ЭлМассива.Код) Тогда 
			Продолжить;	
		КонецЕсли;	
		
		НайденныйЭлемент = Справочники.PAPI_ШаблоныСообщений.НайтиПоКоду(ЭлМассива.Код);
		
		Если ЗначениеЗаполнено(НайденныйЭлемент) Тогда 
			Продолжить;
		КонецЕсли;
		
		НовыйЭлемент = Справочники.PAPI_ШаблоныСообщений.СоздатьЭлемент();
	
		НовыйЭлемент.Код 			= ЭлМассива.Код;
		НовыйЭлемент.КодСостояния 	= ЭлМассива.КодСостояния;
		НовыйЭлемент.ТекстСообщения = ЭлМассива.Сообщение;
		
		НовыйЭлемент.Стандартный 	= Истина;
		
		Попытка
			
			НовыйЭлемент.ОбменДанными.Загрузка = Истина;
			НовыйЭлемент.Записать();
			Отказ = Ложь;

		Исключение
			
			Отказ = Истина;
			ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			PAPI_Логирование.ЗаписатьВЛог("PAPI.Ошибка", Перечисления.PAPI_ТипЛога.Ошибка, ТекстОшибки, "Справочники.PAPI_ШаблоныСообщений");
		
		КонецПопытки;
													
									
	КонецЦикла;	
	
	
	Если ВключенПривилегированныйРежим Тогда 
		ВключенПривилегированныйРежим = Ложь;
		УстановитьПривилегированныйРежим(ВключенПривилегированныйРежим);	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Заполняем массив для формирования элементов справочника PAPI_ШаблоныСообщений
Процедура ДобавитьВМассивДляЗаполненияЭлемент(МассивДляЗаполнения, КодСостояния, КодОшибки, ТекстСообщения)
	
	МассивДляЗаполнения.Добавить(Новый Структура("КодСостояния, Код, Сообщение", КодСостояния, КодОшибки, ТекстСообщения));

КонецПроцедуры	

#КонецОбласти