// Добавить или изменяет запись регистра
//
// Параметры:
//  СтруктураЗаписи	 - Структура - Необходимая структура для записи в регистр
// 
// Возвращаемое значение:
//  Булево - Истина -запись прошла без ошибок, Ложь - были ошибки при записи
//
Функция ДобавитьИзменитьЗапись(СтруктураЗаписи) Экспорт   
	
	Результат = Ложь;
	
	ВключенПривилегированныйРежим = Ложь;
	Если Не ПривилегированныйРежим() Тогда  
		ВключенПривилегированныйРежим = Истина;
		УстановитьПривилегированныйРежим(ВключенПривилегированныйРежим);
	КонецЕсли;	
	
	
	Если ТипЗнч(СтруктураЗаписи) <> Тип("Структура") Тогда
		
		ТекстОшибки = НСтр("ru = 'Запись не является Структурой'; en = 'Record is not a Structure'");		
		PAPI_Логирование.ЗаписатьВЛог("PAPI.Ошибка", Перечисления.PAPI_ТипЛога.Ошибка, ТекстОшибки, "РегистрыСведений.PAPI_ОшибкиОбработкиПослеЗаписиВерсий");
		
		Возврат Результат; 
		
	КонецЕсли;
	
	Если Не СтруктураЗаписи.Свойство("ТипОбъекта") Тогда 
		                                        
		ТекстОшибки = НСтр("ru = 'Отсутствует свойство ""ТипОбъекта""'; en = 'Object type property is missing'");
		PAPI_Логирование.ЗаписатьВЛог("PAPI.Ошибка", Перечисления.PAPI_ТипЛога.Ошибка, ТекстОшибки, "РегистрыСведений.PAPI_ОшибкиОбработкиПослеЗаписиВерсий");
		
		Возврат Результат;		
		
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(СтруктураЗаписи.ТипОбъекта) Тогда 
		                                        
		ТекстОшибки = НСтр("ru = 'Не заполнен ""ТипОбъекта""'; en = 'Object type not filled in'");
		PAPI_Логирование.ЗаписатьВЛог("PAPI.Ошибка", Перечисления.PAPI_ТипЛога.Ошибка, ТекстОшибки, "РегистрыСведений.PAPI_ОшибкиОбработкиПослеЗаписиВерсий");
		
		Возврат Результат;		
				
	КонецЕсли;
	
	Если Не СтруктураЗаписи.Свойство("ИдОбъекта") Тогда 
		                                        
		ТекстОшибки = НСтр("ru = 'Отсутствует свойство ""ИдОбъекта""'; en = 'Object ID property is missing'");
		PAPI_Логирование.ЗаписатьВЛог("PAPI.Ошибка", Перечисления.PAPI_ТипЛога.Ошибка, ТекстОшибки, "РегистрыСведений.PAPI_ОшибкиОбработкиПослеЗаписиВерсий");
		
		Возврат Результат;		
		
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(СтруктураЗаписи.ИдОбъекта) Тогда 
		                                        
		ТекстОшибки = НСтр("ru = 'Не заполнен ""ИдОбъекта""'; en = 'Object ID not filled in'");
		PAPI_Логирование.ЗаписатьВЛог("PAPI.Ошибка", Перечисления.PAPI_ТипЛога.Ошибка, ТекстОшибки, "РегистрыСведений.PAPI_ОшибкиОбработкиПослеЗаписиВерсий");
		
		Возврат Результат;		
				
	КонецЕсли;
	
	
	Если Не СтруктураЗаписи.Свойство("ДатаИзменения") Тогда     
		
		СтруктураЗаписи.Вставить("ДатаИзменения", ТекущаяДатаСеанса());
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(СтруктураЗаписи.ДатаИзменения) Тогда
		
		СтруктураЗаписи.Вставить("ДатаИзменения", ТекущаяДатаСеанса());	
		
	КонецЕсли;	
	
	НаборЗаписей = РегистрыСведений.PAPI_ОшибкиОбработкиПослеЗаписиВерсий.СоздатьНаборЗаписей(); 
	НаборЗаписей.Отбор.ТипОбъекта.Установить(СтруктураЗаписи.ТипОбъекта);
	НаборЗаписей.Отбор.ИдОбъекта.Установить(СтруктураЗаписи.ИдОбъекта);
	
	НаборЗаписей.Прочитать();
	
	МассивПолейРегистра = МассивПолейРегистра();
	
	Если НаборЗаписей.Количество() = 0 Тогда
		
		НоваяЗаписьРегистра = НаборЗаписей.Добавить();  		
		МассивПолейРегистра.Добавить("НачальнаяВерсия");
		
	Иначе //НаборЗаписей.Количество() > 0
				
		НоваяЗаписьРегистра = НаборЗаписей[0]; 	
				
	КонецЕсли;
	
	Попытка
		
		Для Каждого элМассива Из МассивПолейРегистра Цикл 
				
			Если СтруктураЗаписи.Свойство(элМассива) Тогда
				
				НоваяЗаписьРегистра[элМассива] = СтруктураЗаписи[элМассива];
					
			КонецЕсли	
			
		КонецЦикла;
		
		НаборЗаписей.ДополнительныеСвойства.Вставить("PAPIОтключитьПодпискуПередЗаписью");
		
		НаборЗаписей.Записать();
		Результат = Истина;
		
	Исключение

		ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());		
		PAPI_Логирование.ЗаписатьВЛог("PAPI.Ошибка", Перечисления.PAPI_ТипЛога.Ошибка, ТекстОшибки, "РегистрыСведений.PAPI_ОшибкиОбработкиПослеЗаписиВерсий");						
					
	КонецПопытки;
		
	Если ВключенПривилегированныйРежим Тогда 
		ВключенПривилегированныйРежим = Ложь;
		УстановитьПривилегированныйРежим(ВключенПривилегированныйРежим);	
	КонецЕсли;
	
	Возврат Результат; 	
	
КонецФункции						   
						   
// Записывает ошибку в регистр
//
// Параметры:
//  ТекущиеДанные		 - Соответствие - Описание см. PAPI_ПодпискиНаСобытия.СоответствиеНаОснованииОбработкаПослеЗаписиВерсийИсторииДанных 
//  РезультатПодготовки	 - Структура - "Отработал, ТекстОшибки"
// 
// Возвращаемое значение:
//  Булево - Значение записано или нет 
//
Функция ЗаписатьОшибкуВРегистр(ТекущиеДанные, РезультатПодготовки) Экспорт 
	
	СтруктураЗаписиПостРегистра =  ПолучитьСтруктуруПоУмолчанию();
	СтруктураЗаписиПостРегистра.Вставить("ТипОбъекта", 		ТекущиеДанные.ТипДанных);
	СтруктураЗаписиПостРегистра.Вставить("ИдОбъекта", 		ПолучитьНавигационнуюСсылку(ТекущиеДанные.Данные));
	СтруктураЗаписиПостРегистра.Вставить("ВидИзменения", 	ТекущиеДанные.ВидИзменения);
	СтруктураЗаписиПостРегистра.Вставить("НачальнаяВерсия",	ТекущиеДанные.НачальнаяВерсия);
	СтруктураЗаписиПостРегистра.Вставить("ПоследняяВерсия", ТекущиеДанные.ПоследняяВерсия);	
	СтруктураЗаписиПостРегистра.Вставить("Представление",	СокрЛП(ТекущиеДанные.Данные));
	СтруктураЗаписиПостРегистра.Вставить("ТекстОшибки",		РезультатПодготовки.ТекстОшибки);
	
	Возврат ДобавитьИзменитьЗапись(СтруктураЗаписиПостРегистра); 
	
КонецФункции	


// Возвращает массив полей регистра
// 
// Возвращаемое значение:
//  Массив - Поля заполняемые при создании записи
//
Функция МассивПолейРегистра()
	
	МассивПолейРегистра = Новый Массив;  
	
	// Измерения
	МассивПолейРегистра.Добавить("ТипОбъекта");
	МассивПолейРегистра.Добавить("ИдОбъекта");
	
	// Тип изменения
	МассивПолейРегистра.Добавить("ВидИзменения");

	// Дата изменения
	МассивПолейРегистра.Добавить("ДатаИзменения");
	
	// Участвующие в изменении версии
	//МассивПолейРегистра.Добавить("НачальнаяВерсия");
	МассивПолейРегистра.Добавить("ПоследняяВерсия");	
	
	// Представление данных
	МассивПолейРегистра.Добавить("Представление");
		
	// Ошибка записи
	МассивПолейРегистра.Добавить("ТекстОшибки");
		
	Возврат МассивПолейРегистра;
	
КонецФункции

// Возвращает структуру записи регистра "PAPI_ОшибкиОбработкиПослеЗаписиВерсий"
//
// Возвращаемое значение:
//  СтруктураРегистра - Структура:
//		ТипОбъекта		- Строка - Тип документа
//		ИдОбъекта		- Строка - Уникальный идентификатор или навигационная ссылка
//		ВидИзменения 	- Строка - Текстовое представление вида изменений. Может принимать следующие значения: "Добавление", "Изменение", "Удаление"
//		ДатаИзменения	- Дата - Дата и время в которое происходила обработка версии
// 		НачальнаяВерсия - Число(10,0) - Если несколько версий по одним данным то записываем самый младший номер версии
// 		ПоследняяВерсия - Число(10,0) - Если несколько версий по одним данным то записываем самый старший номер версии
//		Представление	- Строка - Представление документа
//		ТекстОшибки		- Строка - Описание произошедшей ошибки в ходе выполнения алгоритма 
//
Функция ПолучитьСтруктуруПоУмолчанию() Экспорт
	
	СтруктураРегистра = Новый Структура;
	СтруктураРегистра.Вставить("ТипОбъекта", 		"");
	СтруктураРегистра.Вставить("ИдОбъекта", 		"");
	СтруктураРегистра.Вставить("ВидИзменения", 		"");
	СтруктураРегистра.Вставить("НачальнаяВерсия",	0);
	СтруктураРегистра.Вставить("ПоследняяВерсия", 	0);	
	СтруктураРегистра.Вставить("Представление",		"");
	СтруктураРегистра.Вставить("ТекстОшибки",		"");

		
	Возврат СтруктураРегистра;    
	
КонецФункции